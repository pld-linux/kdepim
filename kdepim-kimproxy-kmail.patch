? headerstyle_khtml_crasher.cpp
? kmmsgham.png
Index: Makefile.am
===================================================================
RCS file: /home/kde/kdepim/kmail/Makefile.am,v
retrieving revision 1.261
diff -u -5 -d -p -r1.261 Makefile.am
--- Makefile.am	2 May 2004 21:09:38 -0000	1.261
+++ Makefile.am	9 May 2004 16:12:52 -0000
@@ -16,11 +16,12 @@ lib_LTLIBRARIES = libkmailprivate.la
 libkmailprivate_la_LDFLAGS = $(all_libraries) -version-info 0:0:0 -no-undefined
 libkmailprivate_la_LIBADD  = $(LIB_KHTML) $(LIB_KSPELL) $(LIB_KABC) \
 	../libkdenetwork/libkdenetwork.la ../libkdepim/libkdepim.la \
 	../mimelib/libmimelib.la \
 	../libksieve/libksieve.la \
-	../certmanager/lib/libkleopatra.la
+	../certmanager/lib/libkleopatra.la \
+	-lkimproxy
 
 kde_module_LTLIBRARIES = kcm_kmail.la libkmailpart.la libkmail_bodypartformatter_application_octetstream.la
 libkmailpart_la_LDFLAGS = $(all_libraries) $(KDE_RPATH) -version-info 1:0 -no-undefined
 libkmailpart_la_LIBADD	= libkmailprivate.la
 
Index: csshelper.cpp
===================================================================
RCS file: /home/kde/kdepim/kmail/csshelper.cpp,v
retrieving revision 1.11
diff -u -5 -d -p -r1.11 csshelper.cpp
--- csshelper.cpp	13 Oct 2003 18:38:55 -0000	1.11
+++ csshelper.cpp	9 May 2004 16:12:52 -0000
@@ -286,11 +286,11 @@ namespace KMail {
     return s && *s != *d ;
   }
 
   QString CSSHelper::cssDefinitions( bool fixed ) const {
     assert( d );
-    return
+	QString returnVal =
       d->commonCssDefinitions()
       +
       "@media screen {\n\n"
       +
       d->screenCssDefinitions( this, fixed )
@@ -299,10 +299,12 @@ namespace KMail {
       "@media print {\n\n"
       +
       d->printCssDefinitions()
       +
       "}\n";
+	kdDebug( 0 ) << returnVal << endl;
+	return returnVal;
   }
 
   QString CSSHelper::htmlHead( bool fixed ) const {
     return
       "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n"
@@ -384,21 +386,34 @@ namespace KMail {
 	       "  border: solid %3 1px ! important;\n"
 	       "}\n\n"
 
 	       "div.fancy.header > div a[href] { color: %3 ! important; }\n\n"
 
-	       "div.fancy.header table {\n"
+	       "div.fancy.header > table.outer{\n"
 	       "  background-color: %2 ! important;\n"
 	       "  color: %3 ! important;\n"
 	       "  border-bottom: solid %3 1px ! important;\n"
 	       "  border-left: solid %3 1px ! important;\n"
 	       "  border-right: solid %3 1px ! important;\n"
 	       "}\n\n"
 
+		   "div.fancy.header > div.sender-pic{\n"
+		   "  font-size:0.9em;\n"
+		   "  border:1px solid black;\n"
+		   "  background-color:InfoBackground;\n"
+		   "}\n\n"
+
+		   "div.fancy.header > div.sender-status{\n"
+		   "  text-align:center;\n"
+		   "}\n\n"
+
 	       "div.htmlWarn {\n"
 	       "  border: 2px solid #ffffff ! important;\n"
-	       "}\n\n" )
+	       "}\n\n"
+           "div.senderStatus {\n"
+            
+            )
       .arg( headerFont,
 	    cg.background().name(),
 	    cg.foreground().name() )
       + quoteCSS;
   }
@@ -567,17 +582,29 @@ namespace KMail {
 
 	       "div.fancy.header > div a[href] { color: %3 ! important; }\n\n"
 
 	       "div.fancy.header > div a[href]:hover { text-decoration: underline ! important; }\n\n"
 
-	       "div.fancy.header table {\n"
+	       "div.fancy.header > table.outer {\n"
 	       "  background-color: %5 ! important;\n"
 	       "  color: %4 ! important;\n"
 	       "  border-bottom: solid %4 1px ! important;\n"
 	       "  border-left: solid %4 1px ! important;\n"
 	       "  border-right: solid %4 1px ! important;\n"
-	       "}\n\n" )
+	       "}\n\n"
+
+		   "div.senderpic{\n"
+		   "  font-size:0.9em;\n"
+		   "  border:1px solid black;\n"
+		   //"  background-color:InfoBackground;\n"
+		   "  background-color:yellow;\n"
+		   "}\n\n"
+
+		   "div.senderstatus{\n"
+		   "  text-align:center;\n"
+		   "}\n\n" )
+
       .arg( headerFont )
       .arg( cg.highlight().name(),
 	    cg.highlightedText().name(),
 	    cg.foreground().name(),
 	    cg.background().name() )
Index: headerstrategy.cpp
===================================================================
RCS file: /home/kde/kdepim/kmail/headerstrategy.cpp,v
retrieving revision 1.9
diff -u -5 -d -p -r1.9 headerstrategy.cpp
--- headerstrategy.cpp	11 Jan 2004 21:57:07 -0000	1.9
+++ headerstrategy.cpp	9 May 2004 16:12:52 -0000
@@ -51,18 +51,18 @@ namespace KMail {
   };
   static const int numBriefHeaders = sizeof briefHeaders / sizeof *briefHeaders;
 
 
   static const char * standardHeaders[] = {
-    "subject", "from", "cc", "bcc", "to",
+    "subject", "from", "cc", "bcc", "to", "status",
   };
   static const int numStandardHeaders = sizeof standardHeaders / sizeof *standardHeaders;
 
 
   static const char * richHeaders[] = {
     "subject", "date", "from", "cc", "bcc", "to",
-    "organization", "organisation", "reply-to"
+    "organization", "organisation", "reply-to", "status"
   };
   static const int numRichHeaders = sizeof richHeaders / sizeof *richHeaders;
 
   //
   // Convenience function
Index: headerstyle.cpp
===================================================================
RCS file: /home/kde/kdepim/kmail/headerstyle.cpp,v
retrieving revision 1.10
diff -u -5 -d -p -r1.10 headerstyle.cpp
--- headerstyle.cpp	2004-05-16 10:13:12.297173016 +0200	1.10
+++ headerstyle.cpp	2004-05-16 10:10:41.566087624 +0200
@@ -38,7 +38,9 @@
 #include "headerstrategy.h"
 #include "linklocator.h"
 #include "kmmessage.h"
+#include "kmkernel.h"
 
+#include <libkdepim/email.h>
 
 #include <mimelib/string.h>
 #include <mimelib/field.h>
@@ -47,8 +49,13 @@
 #include <kdebug.h>
 #include <klocale.h>
 #include <kglobal.h>
-
+#include <kimproxy.h>
+#include <kabc/stdaddressbook.h>
+#include <kabc/addresseelist.h>
+#include <kmdcodec.h>
 #include <qdatetime.h>
+#include <qbuffer.h>
+#include <qimage.h>
 #include <qapplication.h>
 #include <qregexp.h>
 
@@ -248,17 +255,25 @@
 
     if ( strategy->showHeader( "date" ) )
       headerStr.append(i18n("Date: ") + strToHtml(dateString)+"<br>\n");
-
+    
+    // Get Instant Messaging presence
+    KABC::AddressBook *addressBook = KABC::StdAddressBook::self();
+    KABC::AddresseeList addresses = addressBook->findByEmail( KPIM::getEmailAddr( message->from() ) );
+    ::KIMProxy *imProxy = KMKernel::self()->imProxy();
+    QString presence = imProxy->presenceString( addresses[0].uid() );
+ 
     if ( strategy->showHeader( "from" ) ) {
       headerStr.append(i18n("From: ") +
 		       KMMessage::emailAddrAsAnchor(message->from(),FALSE));
       if ( !vCardName.isEmpty() )
-	headerStr.append("&nbsp;&nbsp;<a href=\"" + vCardName +
-			 "\">" + i18n("[vCard]") + "</a>" );
+        headerStr.append("&nbsp;&nbsp;<a href=\"" + vCardName +
+              "\">" + i18n("[vCard]") + "</a>" );
+      if ( !presence.isEmpty() )
+        headerStr.append("&nbsp;&nbsp;(" + presence + ")" );
       if ( strategy->showHeader( "organization" )
-	   && !message->headerField("Organization").isEmpty())
-	headerStr.append("&nbsp;&nbsp;(" +
-			 strToHtml(message->headerField("Organization")) + ")");
+          && !message->headerField("Organization").isEmpty())
+        headerStr.append("&nbsp;&nbsp;(" +
+              strToHtml(message->headerField("Organization")) + ")");
       headerStr.append("<br>\n");
     }
 
@@ -354,6 +369,69 @@
       dateString = message->dateStr();
     }
 
+    KABC::AddressBook *addressBook = KABC::StdAddressBook::self();
+    KABC::AddresseeList addresses = addressBook->findByEmail( KPIM::getEmailAddr( message->from() ) );
+
+    // Get KABC picture and IM status
+    QString userHTML;
+    QString presence;
+    QString kabcUid;
+    
+    if( addresses.count() == 1 )
+    {
+      // kabcUid is embedded in im: URIs to indicate which IM contact to message
+      kabcUid = addresses[0].uid();
+      // picture
+      QString photoURL;
+      if ( addresses[0].photo().isIntern() )
+      {
+        // get photo data and convert to data: url
+        kdDebug( 5006 ) << "INTERNAL photo found" << endl;
+        QImage photo = addresses[0].photo().data();
+        QByteArray ba;
+        QBuffer buffer( ba );
+        buffer.open( IO_WriteOnly );
+        photo.save( &buffer, "PNG" );
+        photoURL = QString::fromLatin1("data:image/png;base64,%1").arg( KCodecs::base64Encode( ba ) );
+        kdDebug( 0 ) << "ENCODED IMAGE LENGTH IS: " << photoURL.length() << endl;
+      }
+      else
+      {
+        kdDebug( 5006 ) << "URL found" << endl;
+        photoURL = addresses[0].photo().url();
+        if ( photoURL.startsWith("/") )
+          photoURL.prepend( "file:" );
+      }
+      if( !photoURL.isEmpty() )
+      {
+        //kdDebug( 5006 ) << "Got a photo: " << photoURL << endl;
+	    // userHTML = QString("<img style=\"border:1px solid black;\" src=\"picture\" width=\"60\" height=\"60\">")
+                          ;//.arg( photoURL );
+        userHTML = QString("<img src=\"%1\" width=\"60\" height=\"60\">").arg( photoURL );
+        kdDebug( 0 ) << "PHOTO TAG IS " << userHTML << endl;
+        kdDebug( 0 ) << endl;
+      }
+      // im status
+      ::KIMProxy *imProxy = KMKernel::self()->imProxy();
+      presence = imProxy->presenceString( addresses[0].uid() );
+      if ( !userHTML.isEmpty() )
+      {
+        if ( presence.isEmpty() )
+          userHTML = QString("<div class=\"senderpic\">") + userHTML + "</div>";
+        else
+          userHTML = QString( "<div class=\"senderpic\">"
+                              "<a href=\"im:%1\">%2<div class=\"senderstatus\">%3</div></a>"
+                              "</div>" ).arg( kabcUid )
+                                        .arg( userHTML )
+                                        .arg( presence );
+      }
+    }
+    else
+    {
+      kdDebug( 5006 ) << "Multiple / No addressees matched email address; Count is " << addresses.count() << endl;
+      userHTML = "&nbsp;";
+    }
+
     //case HdrFancy:
     // the subject line and box below for details
     if ( strategy->showHeader( "subject" ) )
@@ -362,8 +440,8 @@
 		        .arg(message->subject().isEmpty()?
 			     i18n("No Subject") :
 			     strToHtml(message->subject()));
-    headerStr += "<table>\n";
-
+    headerStr += "<table class=\"outer\"><tr><td width=\"100%\"><table>\n";
+    //headerStr += "<table>\n";
     // from line
     // the mailto: URLs can contain %3 etc., therefore usage of multiple
     // QString::arg is not possible
@@ -375,6 +453,8 @@
                  + ( !vCardName.isEmpty() ? "&nbsp;&nbsp;<a href=\"" + vCardName + "\">"
                                 + i18n("[vCard]") + "</a>"
                               : QString("") )
+                 + ( !presence.isEmpty() ? "&nbsp;&nbsp;(" + presence + ")"
+                              : QString("") )
                  + ( message->headerField("Organization").isEmpty()
                               ? QString("")
                               : "&nbsp;&nbsp;("
@@ -408,10 +488,23 @@
                             .arg(i18n("Date: "))
 		            .arg( directionOf( message->dateStr() ) )
                             .arg(strToHtml(dateString)));
-    headerStr.append("</table>\n");
 
+    //headerStr.append("</table>\n");
+/*    if( strategy->showHeader( "status" ) )
+      headerStr.append( QString( "<tr><th>%1</th>\n"
+                                 "<td dir=\"%2\">%3</td></tr>\n")
+                                    .arg(i18n("Sender status: "))
+                                    .arg( directionOf( onlineStatus ) )
+                                    .arg(onlineStatus));*/
+    headerStr.append(
+          QString("</table></td><td align=\"center\">%1</td></tr></table>\n").arg(userHTML)
+                     );
+    
     headerStr += "</div>\n\n";
-
+    kdDebug( 0 ) << "HEADER IS: " << headerStr.left( headerStr.length() / 2 ) << endl;
+    kdDebug( 0 ) << "HEADER IS: " << headerStr.right( headerStr.length() / 2 ) << endl;
+    
+    kdDebug( 0 ) << "END HEADER. " << endl;
     return headerStr;
   }
 

Index: kmcommands.cpp
===================================================================
RCS file: /home/kde/kdepim/kmail/kmcommands.cpp,v
retrieving revision 1.129
diff -u -5 -d -p -r1.129 kmcommands.cpp
--- kmcommands.cpp	2004-05-15 16:50:27.000000000 +0200	1.129
+++ kmcommands.cpp	2004-05-16 10:15:38.350969464 +0200
@@ -46,6 +46,9 @@
 #include <kdebug.h>
 #include <kfiledialog.h>
 #include <kio/netaccess.h>
+#include <kimproxy.h>
+#include <kabc/stdaddressbook.h>
+#include <kabc/addresseelist.h>
 #include <klocale.h>
 #include <kmessagebox.h>
 #include <kparts/browserextension.h>
@@ -1793,6 +1796,10 @@
     win->setCharset("", TRUE);
     win->show();
   }
+  else if ( mUrl.protocol() == "im" )
+  {
+    kmkernel->imProxy()->chatWithContact( mUrl.path() );
+  }
   else if ((mUrl.protocol() == "http") || (mUrl.protocol() == "https") ||
            (mUrl.protocol() == "ftp") || (mUrl.protocol() == "file") ||
            (mUrl.protocol() == "ftps") || (mUrl.protocol() == "sftp" ) ||
@@ -2201,3 +2208,41 @@
 {
   return mFolder->mailingList().helpURLS();
 }
+
+KMIMChatCommand::KMIMChatCommand( const KURL &url, KMMessage *msg )
+  :mUrl( url ), mMessage( msg )
+{
+}
+
+void KMIMChatCommand::execute()
+{
+  kdDebug( 0 ) << k_funcinfo << " URL is: " << mUrl << endl;
+  // find UID for mail address
+  KABC::AddressBook *addressBook = KABC::StdAddressBook::self();
+  KABC::AddresseeList addresses = addressBook->findByEmail( KPIM::getEmailAddr( mUrl.path() ) ) ;
+
+  // start chat
+  if( addresses.count() == 1 )
+      kmkernel->imProxy()->chatWithContact( addresses[0].uid() );
+  else
+  {
+    kdDebug( 0 ) << "Didn't find exactly one addressee, couldn't tell who to chat to for that email address.  Count = " << addresses.count() << endl;
+    kdDebug( 0 ) << "mailto url : " << mUrl.path() << " decodes to: " << KMMessage::decodeMailtoUrl( mUrl.path() ) << endl;
+  }
+}
+//   KMComposeWin *win;
+//   KMMessage *msg = new KMMessage;
+//   uint id = 0;
+// 
+//   if ( mMessage && mMessage->parent() )
+//     id = mMessage->parent()->identity();
+// 
+//   msg->initHeader(id);
+//   msg->setCharset("utf-8");
+//   msg->setTo( KMMessage::decodeMailtoUrl( mUrl.path() ) );
+// 
+//   win = new KMComposeWin(msg, id);
+//   win->setCharset("", TRUE);
+//   win->setFocusToSubject();
+//   win->show();
+
Index: kmcommands.h
===================================================================
RCS file: /home/kde/kdepim/kmail/kmcommands.h,v
retrieving revision 1.32
diff -u -5 -d -p -r1.32 kmcommands.h
--- kmcommands.h	7 May 2004 23:19:20 -0000	1.32
+++ kmcommands.h	9 May 2004 16:12:53 -0000
@@ -721,6 +721,21 @@ public:
   KMMailingListHelpCommand( QWidget *parent, KMFolder *parent );
 protected:
   virtual KURL::List urls() const;
 };
 
+class KMIMChatCommand : public KMCommand
+{
+  Q_OBJECT
+
+public:
+  KMIMChatCommand( const KURL &url, KMMessage *msg=0 );
+
+private:
+  virtual void execute();
+
+  KURL mUrl;
+  KMMessage *mMessage;
+};
+
+
 #endif /*KMCommands_h*/
Index: kmkernel.cpp
===================================================================
RCS file: /home/kde/kdepim/kmail/kmkernel.cpp,v
retrieving revision 1.270
diff -u -5 -d -p -r1.270 kmkernel.cpp
--- kmkernel.cpp	2004-05-12 19:18:01.000000000 +0200	1.270
+++ kmkernel.cpp	2004-05-12 22:27:21.689372480 +0200
@@ -149,6 +149,8 @@
   }
   mMailService =  new MailServiceImpl();
 
+  mKIMProxy = new KIMProxy( kapp->dcopClient() );
+
   connectDCOPSignal( 0, 0, "kmailSelectFolder(QString)",
                      "selectFolder(QString)", false );
 }
@@ -168,7 +170,9 @@
   mICalIface = 0;
   delete mMailService;
   mMailService = 0;
-
+  delete mKIMProxy;
+  mKIMProxy = 0;
+  
   GlobalSettings::writeConfig();
   mySelf = 0;
   kdDebug(5006) << "KMKernel::~KMKernel" << endl;
@@ -1810,4 +1814,9 @@
   the_dimapFolderMgr->expireAllFolders( true /*immediate*/ );
 }
 
+::KIMProxy* KMKernel::imProxy()
+{
+  return mKIMProxy;
+}
+
 #include "kmkernel.moc"
Index: kmkernel.h
===================================================================
RCS file: /home/kde/kdepim/kmail/kmkernel.h,v
retrieving revision 1.97
diff -u -5 -d -p -r1.97 kmkernel.h
--- kmkernel.h	2 May 2004 20:42:43 -0000	1.97
+++ kmkernel.h	9 May 2004 16:12:54 -0000
@@ -8,10 +8,11 @@
 #include <weaver.h>
 #include <weaverlogger.h>
 
 #include <kconfig.h>
 #include <kdeversion.h>
+#include <kimproxy.h>
 
 #include "kmailIface.h"
 
 #define kmkernel KMKernel::self()
 #define kmconfig KMKernel::config()
@@ -211,10 +212,16 @@ public:
   // ### (kmail freeze with the complete desktop while pinentry-qt appears)
   // ### FIXME: Once the encryption support is asynchron this can be removed
   // ### again.
   void setContextMenuShown( bool flag ) { mContextMenuShown = flag; }
   bool contextMenuShown() const { return mContextMenuShown; }
+  
+  /**
+   * Get a reference to KMail's KIMProxy instance
+   * @return a pointer to a valid KIMProxy 
+   */
+  ::KIMProxy* imProxy();
 
 public slots:
 
   //Save contents of all open composer widnows to ~/dead.letter
   void dumpDeadLetters();
@@ -318,11 +325,13 @@ private:
   KMGroupware * mGroupware;
   KMailICalIfaceImpl* mICalIface;
   // temporary mainwin
   KMMainWin *mWin;
   MailServiceImpl *mMailService;
-
+  
+  // KIMProxy provides access to up to date instant messaging presence data
+  ::KIMProxy *mKIMProxy;
   // true if the context menu of KMFolderTree or KMHeaders is shown
   // this is necessary to know in order to prevent a dead lock between the
   // context menus and the pinentry program
   bool mContextMenuShown;
 
Index: kmmainwidget.cpp
===================================================================
RCS file: /home/kde/kdepim/kmail/kmmainwidget.cpp,v
retrieving revision 1.193
diff -u -5 -d -p -r1.193 kmmainwidget.cpp
--- kmmainwidget.cpp	6 May 2004 21:49:56 -0000	1.193
+++ kmmainwidget.cpp	9 May 2004 16:12:54 -0000
@@ -1985,17 +1985,24 @@ void KMMainWidget::slotMsgPopup(KMMessag
         menu->insertSeparator();
       }
       mMsgView->addAddrBookAction()->plug( menu );
       mMsgView->openAddrBookAction()->plug( menu );
       mMsgView->copyAction()->plug( menu );
+      mMsgView->startImChatAction()->plug( menu );
     } else {
       // popup on a not-mailto URL
       mMsgView->urlOpenAction()->plug( menu );
       mMsgView->urlSaveAsAction()->plug( menu );
       mMsgView->copyURLAction()->plug( menu );
       mMsgView->addBookmarksAction()->plug( menu );
     }
+    if ( aUrl.protocol() == "im" )
+    {
+      // popup on an IM address
+      mMsgView->startImChatAction()->plug( menu );
+    }
+    kdDebug( 0 ) << k_funcinfo << " URL is: " << aUrl << endl;
   }
   else
   {
     // popup somewhere else (i.e., not a URL) on the message
 
Index: kmreaderwin.cpp
===================================================================
RCS file: /home/kde/kdepim/kmail/kmreaderwin.cpp,v
retrieving revision 1.756
diff -u -5 -d -p -r1.756 kmreaderwin.cpp
--- kmreaderwin.cpp.pld	2004-05-12 22:44:34.037431720 +0200
+++ kmreaderwin.cpp	2004-05-12 22:47:17.268616808 +0200
@@ -555,6 +555,8 @@
  			Key_X, this, SLOT(slotToggleFixedFont()),
  			ac, "toggle_fixedfont" );
 
+  mStartIMChatAction = new KAction( i18n("Chat &With..."), 0, this,
+				    SLOT(slotIMChat()), ac, "start_im_chat" );
 }
 
 
@@ -1762,95 +1764,43 @@
     return;
   }
 
-  const QString contentTypeStr =
-    ( msgPart.typeStr() + '/' + msgPart.subtypeStr() ).lower();
-
-  if ( contentTypeStr == "text/x-vcard"  ) {
-    showVCard( &msgPart );
-    return;
-  }
-
-  KMimeType::Ptr mimetype;
-  if ( msgPart.isComplete() ) {
-    mimetype = KMimeType::findByFileContent( name );
-    mMimeTypeGuessedFrom = Content; // for slotDoAtmOpen; FIXME, this is ugly
-    kdDebug(5006) << "KMimeType::findByFileContent( " << name << " ) returned "
-                  << mimetype->name() << endl;
-  }
-  else {
-    mimetype = KMimeType::findByPath( name, 0, true /* no disk access */ );
-    mMimeTypeGuessedFrom = Filename;
-    // if the name of the file doesn't give us a clue about the MIME type
-    // then use the content-type of the attachment.
-    if ( mimetype->name() == "application/octet-stream" ) {
-      mimetype = KMimeType::mimeType( contentTypeStr );
-      mMimeTypeGuessedFrom = ContentType;
+  if (qstricmp(msgPart.typeStr(), "text") == 0)
+  {
+    if (qstricmp(msgPart.subtypeStr(), "x-vcard") == 0) {
+     showVCard( &msgPart );
+     return;
     }
-    kdDebug(5006) << "KMimeType::findByPath( " << name << " ) returned "
-                  << mimetype->name() << endl;
   }
-  KService::Ptr offer =
-    KServiceTypeProfile::preferredService( mimetype->name(), "Application" );
 
-  // remember for slotDoAtmOpen; FIXME, this is ugly
+  // What to do when user clicks on an attachment --dnaber, 2000-06-01
+  // TODO: show full path for Service, not only name
+  QString mimetype = KMimeType::findByURL(KURL(KURL::encode_string(name)))->name();
+  KService::Ptr offer = KServiceTypeProfile::preferredService(mimetype, "Application");
+  // remember for slotDoAtmOpen
   mOffer = offer;
+  QString question;
   QString open_text;
   QString filenameText = msgPart.fileName();
-  if ( filenameText.isEmpty() )
-    filenameText = msgPart.name();
+  if (filenameText.isEmpty()) filenameText = msgPart.name();
   if ( offer ) {
-    open_text = i18n("&Open With '%1'").arg( offer->name() );
+    open_text = i18n("&Open with '%1'").arg(offer->name());
   } else {
     open_text = i18n("&Open With...");
   }
-  int choice;
-  if ( contentTypeStr == mimetype->name() ||
-       contentTypeStr == "application/octet-stream" ) {
-    const QString text = i18n("Open attachment '%1'?\n"
-                              "Note that opening an attachment may compromise "
-                              "your system's security.")
-                         .arg( filenameText );
-    choice = KMessageBox::questionYesNoCancel( this, text,
+  question = i18n("Open attachment '%1'?\n"
+                  "Note that opening an attachment may compromise your "
+                  "system's security.").arg(filenameText);
+  int choice = KMessageBox::questionYesNoCancel(this, question,
       i18n("Open Attachment?"), KStdGuiItem::saveAs(), open_text,
-      QString::fromLatin1("askSave") + mimetype->name() ); // dontAskAgainName
-  }
-  else {
-    QString text;
-    if ( mMimeTypeGuessedFrom == Content )
-      text = i18n("%1 and %3 are descriptions of the MIME type, "
-                  "%2 and %4 is the MIME type, %5 is the file name.",
-                  "<qt><p>Open attachment '%5'?</p>"
-                  "<p><b>Warning:</b> The message suggests that this "
-                  "attachment is of type '%1' (%2), but according to the "
-                  "file's contents it seems to be of type '%3' (%4).</p>"
-                  "<p>Note that opening an attachment may compromise your "
-                  "system's security.</p></qt>")
-             .arg( KMimeType::mimeType( contentTypeStr )->comment(),
-                   contentTypeStr, mimetype->comment(), mimetype->name() )
-             .arg( filenameText );
-    else
-      text = i18n("%1 and %3 are descriptions of the MIME type, "
-                  "%2 and %4 is the MIME type, %5 is the file name.",
-                  "<qt><p>Open attachment '%5'?</p>"
-                  "<p><b>Warning:</b> The message suggests that this "
-                  "attachment is of type '%1' (%2), but according to the "
-                  "filename it seems to be of type '%3' (%4).</p>"
-                  "<p>Note that opening an attachment may compromise your "
-                  "system's security.</p></qt>")
-             .arg( KMimeType::mimeType( contentTypeStr )->comment(),
-                   contentTypeStr, mimetype->comment(), mimetype->name() )
-             .arg( filenameText );
-    choice = KMessageBox::warningYesNoCancel( this, text,
-      i18n("Open Attachment?"), KStdGuiItem::saveAs(), open_text );
-  }
-
+      QString::fromLatin1("askSave")+ mimetype ); // dontAskAgainName
   if( choice == KMessageBox::Yes ) {		// Save
     slotAtmLoadPart( 4 );
-  }
-  else if( choice == KMessageBox::No ) {	// Open
+  } else if( choice == KMessageBox::No ) {	// Open
+
     // this load-part is duplicated from slotAtmLoadPart but is needed here
     // to first display the choice before the attachment is actually downloaded
-    if ( !msgPart.isComplete() ) {
+    if ( node && !node->msgPart().isComplete() )
+    {
       // load the part
       mAtmUpdate = true;
       KMLoadPartsCommand *command = new KMLoadPartsCommand( node, message() );
@@ -1860,81 +1810,26 @@
     } else {
       slotDoAtmOpen();
     }
+
   } else {					// Cancel
     kdDebug(5006) << "Canceled opening attachment" << endl;
   }
+
 }
 
 //-----------------------------------------------------------------------------
 void KMReaderWin::slotDoAtmOpen()
 {
-  if ( !mOffer ) {
+  if ( mOffer ) {
+    // There's a default service for this kind of file - use it
+    KURL::List lst;
+    KURL url;
+    url.setPath(mAtmCurrentName);
+    lst.append(url);
+    KRun::run(*mOffer, lst);
+  } else {
     slotAtmOpenWith();
-    return;
   }
-
-  KURL url;
-  url.setPath( mAtmCurrentName );
-  if ( mMimeTypeGuessedFrom != Content ) {
-    // determine the real mime type of the file by its contents
-    KMimeType::Ptr mimetype = KMimeType::findByFileContent( mAtmCurrentName );
-    kdDebug(5006) << "KMimeType::findByFileContent( " << mAtmCurrentName
-                  << " ) returned " << mimetype->name() << endl;
-    KService::Ptr offer =
-      KServiceTypeProfile::preferredService( mimetype->name(), "Application" );
-    if ( !offer ) {
-      QString text;
-      if ( mMimeTypeGuessedFrom == ContentType )
-        text = i18n( "<qt><p><b>Warning:</b> The message suggested a wrong "
-                     "file type for this attachment.</p>"
-                     "<p>After looking at the file's contents the file seems "
-                     "to be of type '%1' (%2). No application which can "
-                     "handle files of this type is known.</p></qt>")
-               .arg( mimetype->comment(), mimetype->name() );
-      else
-        text = i18n( "<qt><p><b>Warning:</b> The attachment's name suggested "
-                     "a wrong file type.</p>"
-                     "<p>After looking at the file's contents the file seems "
-                     "to be of type '%1' (%2). No application which can "
-                     "handle files of this type is known.</p></qt>")
-               .arg( mimetype->comment(), mimetype->name() );
-      const int choice =
-        KMessageBox::warningContinueCancel( this, text, QString::null,
-                                            i18n("&Open With...") );
-      if( choice == KMessageBox::Continue ) {
-        slotAtmOpenWith();
-      }
-      return;
-    }
-    if ( offer->name() != mOffer->name() ) {
-      QString text;
-      if ( mMimeTypeGuessedFrom == ContentType )
-        text = i18n( "<qt><p><b>Warning:</b> The message suggested a wrong "
-                     "file type for this attachment.</p>"
-                     "<p>After looking at the file's contents the file seems "
-                     "to be of type '%1' (%2) and should be opened with '%3'."
-                     "</p></qt>" )
-               .arg( mimetype->comment(), mimetype->name(), offer->name() );
-      else
-        text = i18n( "<qt><p><b>Warning:</b> The attachment's name suggested "
-                     "a wrong file type.</p>"
-                     "<p>After looking at the file's contents the file seems "
-                     "to be of type '%1' (%2) and should be opened with '%3'."
-                     "</p></qt>" )
-               .arg( mimetype->comment(), mimetype->name(), offer->name() );
-      const int choice =
-        KMessageBox::warningContinueCancel( this, text, QString::null,
-                                            i18n("&Open With '%1'")
-                                            .arg( offer->name() ) );
-      if( choice == KMessageBox::Cancel )
-        return;
-    }
-    mOffer = offer;
-  }
-
-  KURL::List lst;
-  lst.append( url );
-  KRun::run( *mOffer, lst );
 }
 
 //-----------------------------------------------------------------------------
@@ -2239,6 +2134,12 @@
   else
     saveCommand->start();
 }
+//-----------------------------------------------------------------------------
+void KMReaderWin::slotIMChat()
+{
+  KMCommand *command = new KMIMChatCommand( mUrlClicked, message() );
+  command->start();
+}
 
 //-----------------------------------------------------------------------------
 #include "kmreaderwin.moc"
Index: kmreaderwin.h
===================================================================
RCS file: /home/kde/kdepim/kmail/kmreaderwin.h,v
retrieving revision 1.192
diff -u -5 -d -p -r1.192 kmreaderwin.h
--- kmreaderwin.h	2 May 2004 15:43:00 -0000	1.192
+++ kmreaderwin.h	9 May 2004 16:12:55 -0000
@@ -201,10 +201,11 @@ public:
   KAction *copyAction() { return mCopyAction; }
   KAction *copyURLAction() { return mCopyURLAction; }
   KAction *urlOpenAction() { return mUrlOpenAction; }
   KAction *urlSaveAsAction() { return mUrlSaveAsAction; }
   KAction *addBookmarksAction() { return mAddBookmarksAction;}
+  KAction *startImChatAction() { return mStartIMChatAction; }
   // This function returns the complete data that were in this
   // message parts - *after* all encryption has been removed that
   // could be removed.
   // - This is used to store the message in decrypted form.
   void objectTreeToDecryptedMsg( partNode* node,
@@ -321,11 +322,13 @@ public slots:
   void slotShowMsgSrc();
   void slotSaveMsg();
   void slotSaveAttachments();
 
   void slotMessageArrived( KMMessage *msg );
-
+  /** start IM Chat with addressee */
+  void slotIMChat();
+  
 protected slots:
   /** Some attachment operations. */
   void slotAtmOpen();
   void slotDoAtmOpen();
   void slotAtmOpenWith();
@@ -428,11 +431,11 @@ private:
   partNode* mRootNode;
   QString mIdOfLastViewedMessage;
   QWidget *mMainWindow;
   KAction *mViewSourceAction, *mMailToComposeAction, *mMailToReplyAction, *mMailToForwardAction,
       *mAddAddrBookAction, *mOpenAddrBookAction, *mCopyAction, *mCopyURLAction,
-      *mUrlOpenAction, *mUrlSaveAsAction, *mAddBookmarksAction;
+      *mUrlOpenAction, *mUrlSaveAsAction, *mAddBookmarksAction, *mStartIMChatAction;
 
   KToggleAction *mToggleFixFontAction;
   KURL mUrlClicked;
   KMail::HtmlWriter * mHtmlWriter;
   // an attachment should be updated
