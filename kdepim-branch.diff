diff -urN -x CVS kdepim.orig/kdgantt/KDGanttView.cpp kdepim/kdgantt/KDGanttView.cpp
--- kdepim.orig/kdgantt/KDGanttView.cpp	Fri Oct 24 16:26:38 2003
+++ kdepim/kdgantt/KDGanttView.cpp	Sat Jun  5 09:38:53 2004
@@ -1,5 +1,5 @@
 /* -*- Mode: C++ -*-
-   $Id$
+   $Id$
    KDGantt - a multi-platform charting engine
 */
 
@@ -896,9 +896,10 @@
 void KDGanttView::centerTimelineAfterShow( const QDateTime& center )
 {
   myTimeHeader->centerDateTime( center );
-  if ( isVisible() ) return;
-  dtCenterTimeLineAfterShow = center;
-  fCenterTimeLineAfterShow = true;
+  if ( ! isVisible() ) {
+    dtCenterTimeLineAfterShow = center;
+    fCenterTimeLineAfterShow = true;
+  }
 }
 
 /*!
diff -urN -x CVS kdepim.orig/kdgantt/KDGanttViewSubwidgets.cpp kdepim/kdgantt/KDGanttViewSubwidgets.cpp
--- kdepim.orig/kdgantt/KDGanttViewSubwidgets.cpp	Sun Nov  2 14:26:11 2003
+++ kdepim/kdgantt/KDGanttViewSubwidgets.cpp	Sat Jun  5 09:38:53 2004
@@ -1,5 +1,5 @@
 /* -*- Mode: C++ -*-
-   $Id$
+   $Id$
    KDGantt - a multi-platform charting engine
 */
 
@@ -2129,8 +2129,17 @@
 
 void KDTimeHeaderWidget::centerDateTime( const QDateTime& center )
 {
+    if( center < myHorizonStart || center > myHorizonEnd ) {
+        myHorizonStart = center;
+        flagStartTimeSet = true;
+        //qDebug("myHorizonStart reset");
+    }
+    updateTimeTable();
+    repaint();
     moveTimeLineTo(getCoordX( center )-(myGanttView->myCanvasView->viewport()->width() /2));
     //  qDebug("centerDateTime %s %d %d", center.toString().latin1(),getCoordX( center ),(myGanttView->myCanvasView->viewport()->width() /2) );
+    updateTimeTable();
+    repaint();
 }
 
 
diff -urN -x CVS kdepim.orig/korganizer/koagenda.cpp kdepim/korganizer/koagenda.cpp
--- kdepim.orig/korganizer/koagenda.cpp	Mon Apr 19 12:58:54 2004
+++ kdepim/korganizer/koagenda.cpp	Thu Jun 10 17:57:56 2004
@@ -526,14 +526,14 @@
 //        kdDebug(5850) << "koagenda: filtered button press" << endl;
       if (object != viewport()) {
         if (me->button() == RightButton) {
-          mClickedItem = (KOAgendaItem *)object;
+          mClickedItem = dynamic_cast<KOAgendaItem *>(object);
           if (mClickedItem) {
             selectItem(mClickedItem);
             emit showIncidencePopupSignal(mClickedItem->incidence());
           }
     //            mItemPopup->popup(QCursor::pos());
         } else {
-          mActionItem = (KOAgendaItem *)object;
+          mActionItem = dynamic_cast<KOAgendaItem *>(object);
           if (mActionItem) {
             selectItem(mActionItem);
             Incidence *incidence = mActionItem->incidence();
@@ -569,14 +569,14 @@
 
     case QEvent::MouseMove:
       if (object != viewport()) {
-        KOAgendaItem *moveItem = (KOAgendaItem *)object;
-        if (!moveItem->incidence()->isReadOnly() &&
+        KOAgendaItem *moveItem = dynamic_cast<KOAgendaItem *>(object);
+        if (moveItem && !moveItem->incidence()->isReadOnly() &&
             !moveItem->incidence()->recurrence()->doesRecur() )
           if (!mActionItem)
             setNoActionCursor(moveItem,viewportPos);
           else
             performItemAction(viewportPos);
-        } else {
+      } else {
           if ( mActionType == SELECT ) {
             performSelectAction( viewportPos );
           }
@@ -592,9 +592,11 @@
         contentsToGrid(x,y,gx,gy);
         emit newEventSignal(gx,gy);
       } else {
-        KOAgendaItem *doubleClickedItem = (KOAgendaItem *)object;
-        selectItem(doubleClickedItem);
-        emit editIncidenceSignal(doubleClickedItem->incidence());
+        KOAgendaItem *doubleClickedItem = dynamic_cast<KOAgendaItem *>(object);
+        if (doubleClickedItem) {
+          selectItem(doubleClickedItem);
+          emit editIncidenceSignal(doubleClickedItem->incidence());
+        }
       }
       break;
 
